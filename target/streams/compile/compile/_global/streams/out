[0m[[0m[31merror[0m] [0m[0m[31m[31m-- [E007] Type Mismatch Error: /Users/mac/simulation/scalation_2.0/src/main/scala/scalation/DoublyLinkedList.scala:300:45 [0m[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m300 |[0m    vehicles.foreach([36mvehicle[0m => dll.addFirst(Vehicle).asInstanceOf[[35mVehicle[0m])[0m
[0m[[0m[31merror[0m] [0m[0m[31m[31m    |[0m                                             ^^^^^^^[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m                                             Found:    Vehicle[1m[31m.[0m[1m[31mtype[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m                                             Required: Vehicle[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |---------------------------------------------------------------------------[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m Explanation (enabled by `-explain`)[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m Tree: Vehicle[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m I tried to show that[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m   Vehicle.type[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m conforms to[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m   Vehicle[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m but the comparison trace ended with `false`:[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m   ==> Vehicle.type  <:  Vehicle[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m     ==> object Vehicle  <:  Vehicle (left is approximated)[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m     <== object Vehicle  <:  Vehicle (left is approximated) = false[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m   <== Vehicle.type  <:  Vehicle = false[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m The tests were made under a constraint with:[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m  uninstantiated variables: U, U, X0[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m  constrained types: [U](f: Vehicle => U): Unit, [U](f: Vehicle => U): Unit,[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m   [X0]: X0[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m  bounds:[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m      U[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m      U[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m      X0[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m  ordering:[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m  co-deps:[0m
[0m[[0m[31merror[0m] [0m[0m[31m    |[0m  contra-deps:[0m
[0m[[0m[31merror[0m] [0m[0m[31m     ---------------------------------------------------------------------------[0m[0m
[0m[[0m[31merror[0m] [0m[0m[34mExplanation[0m[0m
[0m[[0m[31merror[0m] [0m[0m[34m===========[0m[0m
[0m[[0m[31merror[0m] [0m[0m[0m
[0m[[0m[31merror[0m] [0m[0mTree: Vehicle[0m
[0m[[0m[31merror[0m] [0m[0mI tried to show that[0m
[0m[[0m[31merror[0m] [0m[0m  Vehicle.type[0m
[0m[[0m[31merror[0m] [0m[0mconforms to[0m
[0m[[0m[31merror[0m] [0m[0m  Vehicle[0m
[0m[[0m[31merror[0m] [0m[0mbut the comparison trace ended with `false`:[0m
[0m[[0m[31merror[0m] [0m[0m[0m
[0m[[0m[31merror[0m] [0m[0m  ==> Vehicle.type  <:  Vehicle[0m
[0m[[0m[31merror[0m] [0m[0m    ==> object Vehicle  <:  Vehicle (left is approximated)[0m
[0m[[0m[31merror[0m] [0m[0m    <== object Vehicle  <:  Vehicle (left is approximated) = false[0m
[0m[[0m[31merror[0m] [0m[0m  <== Vehicle.type  <:  Vehicle = false[0m
[0m[[0m[31merror[0m] [0m[0m[0m
[0m[[0m[31merror[0m] [0m[0mThe tests were made under a constraint with:[0m
[0m[[0m[31merror[0m] [0m[0m uninstantiated variables: U, U, X0[0m
[0m[[0m[31merror[0m] [0m[0m constrained types: [U](f: Vehicle => U): Unit, [U](f: Vehicle => U): Unit,[0m
[0m[[0m[31merror[0m] [0m[0m  [X0]: X0[0m
[0m[[0m[31merror[0m] [0m[0m bounds:[0m
[0m[[0m[31merror[0m] [0m[0m     U[0m
[0m[[0m[31merror[0m] [0m[0m     U[0m
[0m[[0m[31merror[0m] [0m[0m     X0[0m
[0m[[0m[31merror[0m] [0m[0m ordering:[0m
[0m[[0m[31merror[0m] [0m[0m co-deps:[0m
[0m[[0m[31merror[0m] [0m[0m contra-deps:[0m
[0m[[0m[31merror[0m] [0m[0mone error found[0m
